---

- hosts: all
  remote_user: admin
  become: yes

  tasks:

    - name: Install zsh, powerline, and other dependencies
      pacman:
        update_cache: yes
        name:
          - which
          - zsh
          - python-pip
          - powerline
          - git
          - diffutils # required for powerline
          - libffi # for some reason this doesn't get installed

    - name: Run command to install libffi
      shell: "yes | pacman -Sy libffi"
      args:
        creates: "/usr/lib/libffi.so.7"
  
    - name: Install oh-my-zsh
      shell: 'yes | sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"'
      args:
        creates: "~/.oh-my-zsh"
      become_user: admin

    - name: Create .zshrc file for root
      file:
        path: /root/.zshrc
        state: touch
        mode: u=rw,g=r,o=r
        modification_time: preserve
        access_time: preserve
      become_user: root

    - name: Disable references to oh-my-zsh themes
      lineinfile:
        path: /home/admin/.zshrc
        state: present
        regexp: '^ZSH_THEME='
        line: '# ZSH_THEME="robbyrussell"'

    - name: Get powerline repository path
      shell: "pip show powerline-status | grep Location: | grep -o '/[^\"]*'"
      register: powerline_path

    - name: Add powerline configuration into .zshrc files
      blockinfile:
        dest: /home/admin/.zshrc
        block: |
          powerline-daemon -q
          . {{ powerline_path.stdout }}/powerline/bindings/zsh/powerline.zsh

    - name: Add powerline configuration into .zshrc files
      blockinfile:
        dest: /root/.zshrc
        block: |
          powerline-daemon -q
          . {{ powerline_path.stdout }}/powerline/bindings/zsh/powerline.zsh

    - name: Get zsh path
      shell: "which zsh"
      register: zsh_path

    - name: Make zsh the default shell for the admin user
      user:
        name: admin
        shell: "{{ zsh_path.stdout }}"

    - name: Make zsh the default shell for root
      user:
        name: root
        shell: "{{ zsh_path.stdout }}"